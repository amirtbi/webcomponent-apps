{"version":3,"file":"fetchCoinHandler.js","sourceRoot":"","sources":["../../src/utils/fetchCoinHandler.ts"],"names":[],"mappings":"AAAA,OAAO,WAAW,MAAM,wBAAwB,CAAC;AACjD,sCAAsC;AACtC,MAAM,QAAQ,GAAG,IAAI,WAAW,EAAE,CAAC;AAEnC,MAAM,QAAQ,GAAG;EACf,MAAM,EAAE,SAAS;CAClB,CAAC;AAEF,MAAM,SAAS,GAAG,IAAI,GAAG,EAAE,CAAC;AAC5B,MAAM,GAAG,GAAG,IAAI,GAAG,EAAE,CAAC;AACtB,MAAM,GAAG,GAAG,IAAI,GAAG,EAAE,CAAC;AACtB,MAAM,QAAQ,GAAG,IAAI,GAAG,EAAE,CAAC;AAE3B,MAAM,WAAW,GAAG,CAAC,IAAY,EAAgB,EAAE;EACjD,OAAO,QAAQ,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,MAAM,IAAI,IAAI,MAAM,CAAC,CAAC;AACxD,CAAC,CAAC;AAEF,MAAM,aAAa,GAAG,CAAC,OAAY,EAAE,IAAY,EAAE,EAAE;EACnD,SAAS,CAAC,GAAG,CAAC,OAAO,EAAE,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;EACxD,SAAS,CAAC,GAAG,CACX,WAAW,EACX,IAAI,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE;IAC7B,KAAK,EAAE,UAAU;IACjB,QAAQ,EAAE,KAAK;GAChB,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAC/B,CAAC;EAEF,SAAS,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC;AAEF,MAAM,UAAU,GAAG,KAAK,EAAE,IAAY,EAAE,EAAE;EACxC,IAAI;IACF,MAAM,QAAQ,GAAG,MAAM,WAAW,CAAC,IAAI,CAAC,CAAC;IACzC,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;IAElC,IAAI,QAAQ,CAAC,MAAM,KAAK,GAAG,EAAE;MAC3B,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,QAAQ,CAAC;MAClC,aAAa,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;MAC5B,OAAO,IAAI,CAAC;KACb;SAAM;MACL,OAAO,IAAI,CAAC;KACb;GACF;EAAC,OAAO,CAAC,EAAE;IACV,OAAO,IAAI,CAAC;GACb;AACH,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,SAAS,GAAG,KAAK,EAAE,KAAa,EAAE,EAAE;EAC/C,IAAI;IACF,MAAM,QAAQ,GAAG,MAAM,UAAU,CAAC,KAAK,CAAC,CAAC;IACzC,IAAI,QAAQ,EAAE;MACZ,IAAI,KAAK,KAAK,SAAS,EAAE;QACvB,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;QACvC,GAAG,CAAC,GAAG,CAAC,WAAW,EAAE,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC;QACjD,GAAG,CAAC,GAAG,CAAC,OAAO,EAAE,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;QACzC,OAAO,GAAG,CAAC;OACZ;WAAM,IAAI,KAAK,KAAK,SAAS,EAAE;QAC9B,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;QACvC,GAAG,CAAC,GAAG,CAAC,WAAW,EAAE,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC;QACjD,GAAG,CAAC,GAAG,CAAC,OAAO,EAAE,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;QACzC,OAAO,GAAG,CAAC;OACZ;WAAM;QACL,QAAQ,CAAC,GAAG,CAAC,MAAM,EAAE,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;QAC5C,QAAQ,CAAC,GAAG,CAAC,WAAW,EAAE,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC;QACtD,QAAQ,CAAC,GAAG,CAAC,OAAO,EAAE,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;QAC9C,OAAO,QAAQ,CAAC;OACjB;KACF;SAAM;MACL,OAAO,IAAI,CAAC;KACb;IAED,gCAAgC;GACjC;EAAC,OAAO,CAAC,EAAE;IACV,OAAO,IAAI,CAAC;GACb;AACH,CAAC,CAAC","sourcesContent":["import ApiInstance from '../plugins/axios/index';\n// const API_KEY = 'BLUNMEHMBB8K5S5H';\nconst axiosApi = new ApiInstance();\n\nconst basePath = {\n  prefix: '/prices',\n};\n\nconst PriceInfo = new Map();\nconst btc = new Map();\nconst eth = new Map();\nconst pairCoin = new Map();\n\nconst fetchPrices = (pair: string): Promise<any> => {\n  return axiosApi.get(`${basePath.prefix}/${pair}/buy`);\n};\n\nconst addPricesInfo = (entries: any, pair: string) => {\n  PriceInfo.set('money', parseFloat(entries.data.amount));\n  PriceInfo.set(\n    'formatted',\n    new Intl.NumberFormat('en-us', {\n      style: 'currency',\n      currency: 'USD',\n    }).format(entries.data.amount),\n  );\n\n  PriceInfo.set('name', pair.split('-')[0]);\n};\n\nconst grabPrices = async (pair: string) => {\n  try {\n    const response = await fetchPrices(pair);\n    console.log('response', response);\n\n    if (response.status === 200) {\n      const { data: result } = response;\n      addPricesInfo(result, pair);\n      return true;\n    } else {\n      return null;\n    }\n  } catch (e) {\n    return null;\n  }\n};\n\nexport const setValues = async (value: string) => {\n  try {\n    const response = await grabPrices(value);\n    if (response) {\n      if (value === 'BTC-USD') {\n        btc.set('name', PriceInfo.get('name'));\n        btc.set('formatted', PriceInfo.get('formatted'));\n        btc.set('money', PriceInfo.get('money'));\n        return btc;\n      } else if (value === 'ETH-USD') {\n        eth.set('name', PriceInfo.get('name'));\n        eth.set('formatted', PriceInfo.get('formatted'));\n        eth.set('money', PriceInfo.get('money'));\n        return eth;\n      } else {\n        pairCoin.set('name', PriceInfo.get('name'));\n        pairCoin.set('formatted', PriceInfo.get('formatted'));\n        pairCoin.set('money', PriceInfo.get('money'));\n        return pairCoin;\n      }\n    } else {\n      return null;\n    }\n\n    // date = new Date().toString();\n  } catch (e) {\n    return null;\n  }\n};\n"]}