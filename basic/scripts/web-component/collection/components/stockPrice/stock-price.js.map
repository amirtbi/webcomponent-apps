{"version":3,"file":"stock-price.js","sourceRoot":"","sources":["../../../src/components/stockPrice/stock-price.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, h, State, Prop, Element, Watch, Listen, Event, EventEmitter } from '@stencil/core';\nimport { setValues } from '../../utils/fetchCoinHandler';\n@Component({\n  tag: 'stock-price',\n  styleUrl: './stock-price.scss',\n  shadow: true,\n})\nexport class StockPrice {\n  stockInput: HTMLInputElement;\n\n  @Element() el: HTMLElement;\n  @Prop({ reflect: true }) title: string;\n  @State() initialSymbol: string;\n  @State() PairCoin: Map<any, any> = new Map();\n  @State() stockUserInput: string;\n  @State() stockInputValid = false;\n  @State() error: string;\n  @State() loading = 'false';\n  @Prop({ reflect: true, mutable: true }) stockSymbol: string;\n  @State() currentState: string;\n  @Event({ bubbles: true, composed: true }) emittedEvent: EventEmitter<string>;\n\n  @Watch('stockSymbol')\n  async watchSymbolHanlder(newValue: string, oldValue: string) {\n    if (newValue !== oldValue) {\n      await this.setPrices(newValue);\n    }\n  }\n\n  // Update status of disabled button\n  onUpdateUserInput = (event: Event) => {\n    this.stockUserInput = (event.target as HTMLInputElement).value;\n    console.log('user input', this.stockUserInput);\n\n    if (this.stockUserInput.trim() !== '') {\n      this.stockInputValid = true;\n    } else {\n      this.stockInputValid = false;\n    }\n  };\n\n  setPrices = async (symbol: string) => {\n    console.log('symbol');\n\n    try {\n      const res = await setValues(symbol);\n      if (res) {\n        this.stockInputValid = true;\n        this.stockSymbol = symbol;\n        this.stockUserInput = this.stockSymbol;\n        this.PairCoin = res;\n        this.error = '';\n      } else {\n        this.error = 'Not valid symbol';\n        return null;\n      }\n    } catch (e) {\n      this.error = 'Not valid symbol';\n      return null;\n    }\n\n    //this.initialSymbol = this.stockSymbol;\n  };\n  // Fetch price and send request\n  onFetchPrice = async (event: Event) => {\n    event.preventDefault();\n\n    // const stockSymbol = (this.el.shadowRoot.querySelector('#symbol') as HTMLInputElement).value;\n    const stockSymbol = this.stockInput.value;\n    if (stockSymbol !== '') {\n      await this.setPrices(stockSymbol);\n    }\n  };\n\n  // Life cylces\n\n  async connectedCallback() {\n    this.loading = 'true';\n    if (!this.stockSymbol) {\n      console.log('========Connected callback====');\n\n      const res = await setValues(this.stockSymbol);\n      if (res) {\n        this.PairCoin = res;\n      }\n      //this.initialSymbol = this.stockSymbol;\n    }\n    this.loading = 'false';\n  }\n  // Before rendering component\n  // componentWillLoad() {\n  //   console.log('component will load');\n  //   this.Price = 0;\n  // }\n\n  componentDidRender() {\n    this.currentState = 'did rendered';\n    console.log('rendered component');\n  }\n\n  // Buil-in method\n  hostData() {\n    return { class: 'error' };\n  }\n  // Component rendered completely\n  async componentDidLoad() {\n    this.loading = 'true';\n    if (this.stockSymbol) {\n      // const res = await fetchPrices(this.stockSymbol);\n      await this.setPrices(this.stockSymbol);\n    }\n  }\n\n  emitEvent() {\n    this.emittedEvent.emit('true');\n  }\n\n  // async componentDidUpdate() {\n  //   console.log('component updated ');\n  //   if (this.stockSymbol !== this.initialSymbol) {\n  //     console.log('http request sent');\n  //     this.initialSymbol = this.stockSymbol;\n  //     await this.setPrices(this.stockSymbol);\n  //   }\n  // }\n  // Before rerendering component\n  componentWillUpdate() {\n    console.log('updating ');\n  }\n\n  // Listen evenets from body\n  @Listen('emittedSymbol', { target: 'body' })\n  async onSubmitListenedEmit(event: CustomEvent) {\n    console.log('Emiited');\n    if (event.detail !== this.stockSymbol && event.detail) {\n      await this.setPrices(event.detail + '-USD');\n    }\n  }\n  render() {\n    let PriceWrapper = <div>Please enter a valid symbol</div>;\n\n    if (this.error) {\n      PriceWrapper = <div class=\"error\">Error:{this.error}</div>;\n    } else if (this.PairCoin.size > 0) {\n      PriceWrapper = (\n        <div>\n          <p>Symbol:&nbsp;{this.PairCoin.get('name')}</p>\n          <p>Price:&nbsp;{this.PairCoin.get('formatted')}</p>\n        </div>\n      );\n    } else {\n      PriceWrapper = <div>Please enter a valid symbol</div>;\n    }\n\n    return [\n      <form id=\"form\" onSubmit={this.onFetchPrice.bind(this)}>\n        <div>Status:{this.currentState}</div>\n        <div class=\"field\">\n          <input value={this.stockUserInput} onInput={this.onUpdateUserInput.bind(this)} ref={el => (this.stockInput = el)} placeholder=\"stock symbol\" id=\"symbol\" />\n        </div>\n        <div class=\"field\">\n          <button disabled={!this.stockInputValid} id=\"btn-submit\" type=\"submit\">\n            Fetch Price\n          </button>\n        </div>\n      </form>,\n      <button onClick={this.emitEvent.bind(this)}>Emit event</button>,\n\n      <section class={this.error ? 'error-box' : ''}>{PriceWrapper}</section>,\n    ];\n  }\n}\n"]}